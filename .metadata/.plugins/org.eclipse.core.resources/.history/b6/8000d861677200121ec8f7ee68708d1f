package com.empsi.inepabor;

import java.util.ArrayList;
import java.util.List;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

import android.util.Log;

public class PlistHandler extends DefaultHandler{

	// ===========================================================
	// Fields
	// ===========================================================

	private int dict_tag = 0;
	private int array_tag = 0;
	private int key_tag = 0;
	private int string_tag = 0;
	
	private boolean in_title_key = false;
	private boolean in_scroll_key = false;
	private boolean in_view_key = false;
	
	private ParsedDataSet dataSet;
	public List<ParsedDataSet> entries = new ArrayList<ParsedDataSet>();
	

	// ===========================================================
	// Getter & Setter
	// ===========================================================

	public ParsedDataSet getParsedData() {
		return this.dataSet;
	}

	// ===========================================================
	// Methods
	// ===========================================================
	@Override
	public void startDocument() throws SAXException {
		this.dataSet = new ParsedDataSet();
	}

	@Override
	public void endDocument() throws SAXException {
		// Nothing to do
	}

	/** Gets be called on opening tags like: 
	 * <tag> 
	 * Can provide attribute(s), when xml was like:
	 * <tag attribute="attributeValue">*/
	@Override
	public void startElement(String namespaceURI, String localName,
			String qName, Attributes atts) throws SAXException {
		
		if (localName.equals("dict")) {
			this.dict_tag++;
			
		}else if (localName.equals("array")) {
			this.array_tag++;
			
		}else if (localName.equals("key")) {
			this.key_tag++;
			
		}else if (localName.equals("string")) {
			this.string_tag++;
		}
	}
	
	/** Gets be called on closing tags like: 
	 * </tag> */
	@Override
	public void endElement(String namespaceURI, String localName, String qName)
			throws SAXException {

		if (localName.equals("dict")) {
			this.dict_tag--;
			
		}else if (localName.equals("array")) {
			this.array_tag--;
			
		}else if (localName.equals("key")) {
			this.key_tag--;
			
		}else if (localName.equals("string")) {
			this.string_tag--;
		}
	}
	
	/** Gets be called on the following structure: 
	 * <tag>characters</tag> */
	@Override
    public void characters(char ch[], int start, int length) {
		String charSet = new String(ch, start, length);
		
		if(this.key_tag > 0){
//			Log.d("KEY", Integer.toString(array_tag) + ": " + charSet);
			if(charSet.equals("Title")){
				this.in_title_key = true;
			}else if(charSet.equals("Scroll")){
				this.dataSet.setScroll(charSet);
			}else if(charSet.equals("View")){
				this.dataSet.setView(charSet);
				this.entries.add(this.dataSet);
				this.dataSet = null;
			}
    			
			
		}else if(this.string_tag > 0){
//			Log.d("STRING", Integer.toString(array_tag) + ": " + charSet);
			if(this.in_title_key){
				this.dataSet.setTitle(charSet);
				this.in_title_key = false;
			}else if(this.in_scroll_key){
				this.dataSet.setScroll(charSet);
				this.in_scroll_key = false;
			}else if(this.in_view_key){
				this.dataSet.setView(charSet);
				this.in_view_key = false;
			}
		}
    }
}
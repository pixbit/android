package com.empsi.inepabor;

import java.io.InputStream;
import java.util.List;

import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.InputSource;
import org.xml.sax.XMLReader;

import android.app.ListActivity;
import android.content.Intent;
import android.content.res.Resources;
import android.net.Uri;
import android.os.Bundle;
import android.util.Log;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.View;
import android.webkit.WebChromeClient;
import android.webkit.WebView;
import android.widget.ListView;

import com.actionbarsherlock.view.MenuItem;

public class MainListActivity extends ListActivity {

	public static final String TAG = MainListActivity.class.getSimpleName();
	public List<ParsedRow> entries;
	public List<ParsedRow> currentEntries;
	public List<ParsedRow> previousEntries;
	public List<String> titleList;
	
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main_list);
        
        try {
                /* Get a SAXParser from the SAXPArserFactory. */
                SAXParserFactory spf = SAXParserFactory.newInstance();
                SAXParser sp = spf.newSAXParser();

                /* Get the XMLReader of the SAXParser we created. */
                XMLReader xr = sp.getXMLReader();
                /* Create a new ContentHandler and apply it to the XML-Reader*/
                PlistHandler myHandler = new PlistHandler();
                xr.setContentHandler(myHandler);
                
                /* Parse the xml-data from our file. */
                Resources res = getResources();
                InputStream is = res.openRawResource(R.raw.data);
                xr.parse(new InputSource(is));
                /* Parsing has finished. */

                /* Our PlistHandler now provides the parsed data to us. */
            		this.entries = myHandler.getListOfRows();
            		this.currentEntries = this.entries;
                
                /* Set the result to be displayed in our GUI. */
//              Toast.makeText(this, parsedExampleDataSet.toString(), Toast.LENGTH_LONG).show();

                /* Set the result to be displayed in our GUI. */
                EmpsiAdapter adapter = new EmpsiAdapter(this, R.layout.empsi_custom_row, this.entries);
                setListAdapter(adapter);
               
        } catch (Exception e) {
                /* Display any Error to the GUI. */
                Log.e(TAG, "XMLQueryError", e);
        }
    }
    
    @Override
    public void onListItemClick(ListView parent, View v, int position, long id) {
//        Toast.makeText(this, this.currentEntries.get(position).getView(), Toast.LENGTH_SHORT).show();
        int view = Integer.parseInt(this.currentEntries.get(position).getView());
        String title = this.currentEntries.get(position).getTitle();
        String scroll = this.currentEntries.get(position).getScroll();
        
        String url;
        switch(view){
        		case 1:
        			url = "file:///android_asset/handbook.htm";
        			break;
        		case 2:
        			url = "file:///android_asset/applicationTutorial.htm";
        			break;
        		case 3:
        			url = "file:///android_asset/bookmarkTutorial.htm";
        			break;
        		case 4:
        			url = "file:///android_asset/navigationTutorial.htm";
        			break;
        		default:
        			url = "http://www.empsi.com";
        }
        
        Intent i = new Intent(getApplicationContext(), MainActivity.class);
        
        i.putExtra("view", url);
        i.putExtra("title", title);
        i.putExtra("scroll", scroll);
        i.setData(Uri.parse(url));
        
        startActivity(i);
    	}
    
    public boolean onOptionsItemSelected(MenuItem item) {

  	    int itemId = item.getItemId();
  	    switch (itemId) {
  	    	  case android.R.id.home:
  	    		finish();

//      			WebView webview = (WebView) findViewById(R.id.web_engine);
//      			webview.getSettings().setJavaScriptEnabled(true);
//      			webview.setWebChromeClient(new WebChromeClient());
//      			webview.loadUrl(view);
//  	        webview.loadUrl("javascript:jQuery('html, body').scrollTop(jQuery('#"+ scroll +"').offset().top);");

//  	        Toast.makeText(this, "home pressed", Toast.LENGTH_LONG).show();
  	        break;
  	    }

  	    return true;
  	}

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.activity_main_list, menu);
        return true;
    }
}